{"version":3,"sources":["components/Shared/Form/Form.js","components/UserDataForm/UserDataForm.js","components/Shared/Comments/Comments.js","hooks/user/useMemberData.js","components/OrderDetails/Pickup.js","components/OrderDetails/SubTotal.js","components/OrderDetails/GrossTotal.js","components/OrderDetails/OrderItem/Title.js","components/OrderDetails/OrderItem/Qty.js","components/OrderDetails/OrderItem/Price.js","components/OrderDetails/OrderItem/OrderItem.js","components/OrderDetails/OrderItemList/OrderItemsList.js","components/OrderDetails/Tips.js","hooks/order-details/useTipsSource.js","components/OrderDetails/UserDetails.js","components/Checkout/CheckoutIFrame.js","components/OrderDetails/OrderDetails.js","hooks/order-details/useCreateOrder.js","hooks/order-details/useCalculateOrderPrice.js","pages/order-details.js","hooks/order-details/useCheckout.js"],"names":["Form","onSubmit","children","className","UserDataForm","credentials","onChange","updateMode","user","toggleUpdateMode","shouldChangeUpdateMode","onClick","htmlFor","autoComplete","placeholder","name","required","value","firstName","mask","mobile","inputProps","type","email","TextArea","Input","Comments","onTextChange","multiple","rows","businessData","dispatch","useDispatch","useState","requestError","setRequestError","useUserCookie","setCookie","credentialsChanged","setCredentialsChanged","setCredentials","useEffect","serviceAccommodatorId","serviceLocationId","phoneNumber","e","target","preventDefault","uid","updateEmailMobileNamesForUserRequest","then","payload","error","message","Promise","reject","registerNewMemberRequest","Pickup","address","saslName","orderPickUp","Card","id","PickUpSelectors","day","time","showIcon","formatAddress","SubTotal","priceSubTotal","discountedPriceSubTotal","orderDiscount","taxes","tips","extraFee","hasDiscount","discount","toFixed","title","label","percent","percentValue","GrossTotal","total","Title","itemName","hasVersions","itemVersions","itemVersion","itemOptions","isPromoCode","version1DisplayText","getSubItemsString","Qty","quantity","Price","price","OrderItem","index","businessUrlKey","search","discountedPrice","promoCodeTitle","onDeleteItem","onEditItem","hasDiscountedPrice","undefined","handleEditItem","handleDeleteItem","OrderItemsList","items","useParams","useLocation","length","map","item","i","key","Tips","tipsLabels","setTipsLabels","otherMode","setOtherMode","tipsSource","setTipsSource","useSelector","state","business","data","tipsObj","displayText","Object","keys","useTipsSource","max","marks","step","defaultValue","tooltipVisible","min","prefix","formatter","UserDetails","formatPhoneNumber","CheckoutIFrame","transactionSetupUrl","scrollToElement","document","getElementById","src","frameBorder","OrderDetails","priceTotal","shoppingCartItems","showSubmitButton","orderInProgress","orderRequestError","submitLabel","transactionError","registerMemberRequestError","onTipsChange","onCreateOrder","onCredentialsChange","preventOrdering","comment","onCommentChange","pickUp","closable","size","htmlType","block","loading","disabled","history","useHistory","loyaltyAndOrderHistory","setOrderInProgress","shoppingCart","itemsWithDiscounts","itemsWithGroupDiscounts","tablePath","setComment","setPriceTotal","setDiscountedPriceSubTotal","setTips","setTaxes","setExtraFee","minimumPurchase","setOrderDiscount","urlParams","URLSearchParams","get","uuid","discounts","discountItem","filter","discountUUID","applicableItemUUID","applicableGroup","calculateDiscountedPrice","floatNum","taxValue","extraFees","taxRate","extraFeeType","extraFeeValue","extraFeeLabel","getPercent","amountTypes","PERCENT","AMOUNT","EXACT","useCalculateOrderPrice","newUser","transactionData","catalogId","requestedDeliveryDate","futureDays","selectedDay","month","year","pad","orderData","formatOrderData","loyaltyStatus","loyaltyForUser","deliveryType","futureOrRegular","isToday","subTotal","tipAmount","taxAmount","totalAmount","createOrder","orderUUID","clearCart","push","resetOrderError","OrderDetailsPage","payment","acceptCreditCards","paymentProcessor","setUpdateMode","useMemberData","onSignUpSubmit","useCreateOrder","onResetOrderError","handleCreateOrder","transactionSetup","setTransactionSetup","setTransactionSetupUrl","setTransactionError","checkoutMode","setCheckoutMode","handler","event","origin","window","location","indexOf","hostedPaymentStatus","transactionID","validationCode","expressResponseCode","expressResponseMessage","CVVResponseCode","approvalNumber","lastFour","cardLogo","approvedAmount","addEventListener","removeEventListener","paymentAPI","getTransactionSetupID","transactionAmount","demo","processTransactionTitle","returnURL","customCSS","response","transactionSetupId","iframeSrc","useCheckout","usePreventOrdering","deleteCartItem","paymentProcessors","VANTIV_HID","catch"],"mappings":"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","file":"static/js/8.1e33dbad.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Form.css';\r\nexport const Form = ({ onSubmit, children, className = '' }) => (\r\n  <form onSubmit={onSubmit} className={`form ${className}`}>\r\n    {children}\r\n  </form>\r\n);\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.any,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Button } from 'antd';\r\nimport { AiOutlineEdit } from 'react-icons/ai';\r\nimport InputMask from 'react-input-mask';\r\nimport './UserDataForm.css';\r\n\r\nexport const UserDataForm = ({\r\n  credentials,\r\n  onChange,\r\n  updateMode,\r\n  user,\r\n  toggleUpdateMode,\r\n  shouldChangeUpdateMode = false\r\n}) => (\r\n  <>\r\n    {user && updateMode && (\r\n      <h4 className=\"flex font-size-lg primary-text\">\r\n        <span>How will we contact you?</span>\r\n        <span onClick={toggleUpdateMode}>\r\n          <AiOutlineEdit />\r\n        </span>\r\n      </h4>\r\n    )}\r\n    <div className=\"user-data-form\">\r\n      <div>\r\n        <label htmlFor=\"firstName\" className=\"font-size-sm\">\r\n          Name to call\r\n        </label>\r\n        <Input\r\n          autoComplete=\"off\"\r\n          placeholder=\"Name to call\"\r\n          name=\"firstName\"\r\n          required\r\n          value={credentials.firstName}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"userName\" className=\"font-size-sm\">\r\n          Mobile phone number\r\n        </label>\r\n        <InputMask mask=\"(999) 999-9999\" value={credentials.mobile} onChange={onChange}>\r\n          {(inputProps) => (\r\n            <Input\r\n              {...inputProps}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Mobile number\"\r\n              name=\"mobile\"\r\n              required\r\n              type=\"tel\"\r\n            />\r\n          )}\r\n        </InputMask>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\" className=\"font-size-sm\">\r\n          E-mail\r\n        </label>\r\n        <Input\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={onChange}\r\n          autoComplete=\"off\"\r\n          value={credentials.email}\r\n        />\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nUserDataForm.propTypes = {\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\nimport './Comments.css';\r\nconst { TextArea } = Input;\r\n\r\nexport const Comments = ({ value, placeholder, onTextChange }) => (\r\n  <div className=\"comments bg-secondary\">\r\n    <TextArea\r\n      className=\"bg-secondary\"\r\n      placeholder={placeholder}\r\n      multiple\r\n      rows={4}\r\n      value={value}\r\n      onChange={onTextChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nComments.propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onTextChange: PropTypes.func.isRequired\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  registerNewMemberRequest,\r\n  updateEmailMobileNamesForUserRequest\r\n} from '../../redux/slices/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport useUserCookie from './useUserCookie';\r\nexport default (businessData, user, updateMode, toggleUpdateMode) => {\r\n  const dispatch = useDispatch();\r\n  const [requestError, setRequestError] = useState(false);\r\n  const [cookies, setCookie] = useUserCookie();\r\n  const [credentialsChanged, setCredentialsChanged] = useState(false);\r\n  const [credentials, setCredentials] = useState({\r\n    firstName: '',\r\n    mobile: '',\r\n    email: ''\r\n  });\r\n  useEffect(() => {\r\n    if (businessData && businessData.serviceAccommodatorId && businessData.serviceLocationId) {\r\n      setCredentials({\r\n        ...credentials,\r\n        serviceAccommodatorId: businessData.serviceAccommodatorId,\r\n        serviceLocationId: businessData.serviceLocationId\r\n      });\r\n    }\r\n  }, [businessData]);\r\n  useEffect(() => {\r\n    if (user) {\r\n      setCredentials({\r\n        ...credentials,\r\n        firstName: user.firstName,\r\n        mobile: user.phoneNumber,\r\n        email: user.email\r\n      });\r\n    }\r\n  }, [user]);\r\n  const handleCredentialsChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value\r\n    });\r\n    if (!credentialsChanged) setCredentialsChanged(true);\r\n  };\r\n  const handleSubmit = (e, updateMode, user, shouldChangeUpdateMode) => {\r\n    e.preventDefault();\r\n    if (credentials.firstName && credentials.mobile && credentials.email) {\r\n      setRequestError(false);\r\n      if (user && user.uid && credentialsChanged) {\r\n        return dispatch(\r\n          updateEmailMobileNamesForUserRequest({\r\n            credentials: credentials,\r\n            user: user\r\n          })\r\n        ).then(({ payload, error }) => {\r\n          if (error) {\r\n            setRequestError(error.message ? error.message : true);\r\n            return Promise.reject(error.message ? error.message : true);\r\n          }\r\n          setCookie(payload.uid);\r\n          toggleUpdateMode();\r\n        });\r\n      } else if (!user) {\r\n        setCredentialsChanged(false);\r\n        return dispatch(registerNewMemberRequest(credentials)).then(({ payload, error }) => {\r\n          if (error) {\r\n            setRequestError(error.message ? error.message : true);\r\n            return Promise.reject(error.message ? error.message : true);\r\n          }\r\n          setCookie(payload.uid);\r\n          toggleUpdateMode();\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return [credentials, credentialsChanged, handleCredentialsChange, handleSubmit, requestError];\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert } from 'antd';\r\nimport { formatAddress } from '../../utils/helpers';\r\nimport { PickUpSelectors } from '../Shared/PickUpSelectors/PickUpSelectors';\r\nimport { Card } from '../Shared/Card/Card';\r\n\r\nexport const Pickup = ({ address, saslName, businessData, user, orderPickUp }) => {\r\n  return (\r\n    <Card className=\"pickup-details\">\r\n      <h4 className=\"font-size-lg primary-text\">Pickup</h4>\r\n      <h5 className=\"flex\">\r\n        <span>From</span>\r\n        <span>{saslName}</span>\r\n      </h5>\r\n      <h5 className=\"flex\">\r\n        <span>Time</span>\r\n        {/*<span>{orderPickUp && `${orderPickUp.day} ${orderPickUp.time}`}</span>*/}\r\n        <span className=\"\">\r\n          <div className={'pickup-details_selectors'} id={'pickup-selectors'}>\r\n            <PickUpSelectors user={user} businessData={businessData} />\r\n          </div>\r\n          <div>\r\n            {(!orderPickUp.day ||\r\n              typeof orderPickUp.day === 'undefined' ||\r\n              !orderPickUp.time ||\r\n              typeof orderPickUp.time === 'undefined') && (\r\n              <Alert message=\"Select day and time\" type=\"warning\" showIcon />\r\n            )}\r\n          </div>\r\n        </span>\r\n      </h5>\r\n\r\n      <h5 className=\"flex order-details__pickup-location\">\r\n        <span>Address</span>\r\n        <span className=\"pickup-address bg-secondary\">{formatAddress(address)}</span>\r\n      </h5>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPickup.propTypes = {\r\n  saslName: PropTypes.string,\r\n  address: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SubTotal = ({\r\n  priceSubTotal,\r\n  discountedPriceSubTotal,\r\n  orderDiscount,\r\n  taxes,\r\n  tips,\r\n  extraFee\r\n}) => {\r\n  const hasDiscount =\r\n    priceSubTotal !== discountedPriceSubTotal && orderDiscount && orderDiscount.discount;\r\n  return (\r\n    <div className=\"subtotal\">\r\n      {/*<h4 className=\"font-size-lg primary-text\">Gross total</h4>*/}\r\n      <h5 className=\"flex\">\r\n        <span>Sub-total</span>\r\n        <span className={`subtotal-price ${hasDiscount ? 'subtotal-price-with-discount' : ''}`}>\r\n          ${priceSubTotal.toFixed(2)}\r\n        </span>\r\n      </h5>\r\n      {hasDiscount && (\r\n        <h5 className={`flex discounted-text order-discount`}>\r\n          <span>{orderDiscount.title}</span>\r\n          <span>${discountedPriceSubTotal.toFixed(2)}</span>\r\n        </h5>\r\n      )}\r\n      {extraFee.value ? (\r\n        <h5 className=\"flex\">\r\n          <span>{extraFee.label ? extraFee.label : 'Extra Fee'}</span>\r\n          <span>${extraFee.value.toFixed(2)}</span>\r\n        </h5>\r\n      ) : null}\r\n      {taxes.value && taxes.percent ? (\r\n        <h5 className=\"flex\">\r\n          <span>Taxes {taxes.percent}%</span>\r\n          <span>${taxes.value.toFixed(2)}</span>\r\n        </h5>\r\n      ) : null}\r\n      <h5 className=\"flex\">\r\n        <span>Optional Tip {tips.value}%</span>\r\n        <span>${tips.percentValue.toFixed(2)}</span>\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nSubTotal.propTypes = {\r\n  subTotal: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  taxes: PropTypes.object,\r\n  extraFee: PropTypes.object,\r\n  tips: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GrossTotal = ({ total }) => (\r\n  <div>\r\n    <h5 className=\"flex font-size-lg total\">\r\n      <span>Total</span>\r\n      <span>${total.toFixed(2)}</span>\r\n    </h5>\r\n  </div>\r\n);\r\n\r\nGrossTotal.propTypes = {\r\n  total: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getSubItemsString} from \"../../../utils/helpers\";\r\n\r\nexport const Title = ({\r\n  itemName,\r\n  hasVersions,\r\n  itemVersions,\r\n  itemVersion,\r\n  itemOptions,\r\n  isPromoCode\r\n}) => (\r\n  <span className={`order-items-list-item__title ${isPromoCode ? ' promo-code-title' : ''}`}>\r\n    <span className=\"order-items-list-item__name\">\r\n      {itemName}\r\n      {hasVersions && itemVersions && itemVersion\r\n        ? `[${itemVersions[itemVersion - 1].version1DisplayText}]`\r\n        : ''}\r\n    </span>\r\n    <span className=\"order-items-list__item-subitems\"> {getSubItemsString(itemOptions)}</span>\r\n  </span>\r\n);\r\n\r\nTitle.propTypes = {\r\n  itemName: PropTypes.string,\r\n  hasVersions: PropTypes.bool,\r\n  itemOptions: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Qty = ({ quantity }) => (\r\n  <td className=\"order-items-list-table__qty\">\r\n    <span className=\"font-size-sm\">x{quantity}</span>\r\n  </td>\r\n);\r\n\r\nQty.propTypes = {\r\n  quantity: PropTypes.number.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Price = ({ price }) => (\r\n  <td className=\"order-items-list-table__price\">\r\n    <span>${price.toFixed(2)}</span>\r\n  </td>\r\n);\r\n\r\nPrice.propTypes = {\r\n  price: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './Title';\r\nimport { Actions } from './Actions';\r\nimport { Qty } from './Qty';\r\nimport { Price } from './Price';\r\nimport { IoMdClose } from 'react-icons/io';\r\n\r\nexport const OrderItem = ({\r\n  itemName,\r\n  itemOptions,\r\n  businessUrlKey,\r\n  search,\r\n  index,\r\n  quantity,\r\n  price,\r\n  discountedPrice,\r\n  promoCodeTitle,\r\n  hasVersions,\r\n  itemVersion,\r\n  itemVersions,\r\n  onDeleteItem,\r\n  onEditItem\r\n}) => {\r\n  const hasDiscountedPrice = discountedPrice !== undefined; //can't just check if(discountedPrice) below, because it can contain 0 value\r\n  const handleEditItem = () => onEditItem(index);\r\n  const handleDeleteItem = () => onDeleteItem(index);\r\n  return (\r\n    <>\r\n      <tr className={hasDiscountedPrice ? 'discounted-price-row-original' : 'default-row'}>\r\n        <td className=\"order-items-list__item-delete\" onClick={handleDeleteItem}>\r\n          <IoMdClose />\r\n        </td>\r\n        <td className=\"order-items-list__item\" onClick={handleEditItem}>\r\n          <Title\r\n            itemOptions={itemOptions}\r\n            itemName={itemName}\r\n            hasVersions={hasVersions}\r\n            itemVersion={itemVersion}\r\n            itemVersions={itemVersions}\r\n          />\r\n          {/*{!hasDiscountedPrice && (\r\n            <Actions\r\n              index={index}\r\n              businessUrlKey={businessUrlKey}\r\n              onDeleteItem={onDeleteItem}\r\n              search={search}\r\n            />\r\n          )}*/}\r\n        </td>\r\n        <Qty quantity={quantity} />\r\n        <Price price={+price * +quantity} />\r\n      </tr>\r\n      {hasDiscountedPrice ? (\r\n        <tr className={'discounted-text'}>\r\n          <td className=\"order-items-list__item-delete\" onClick={handleDeleteItem} />\r\n          <td className=\"order-items-list__item\" onClick={handleEditItem}>\r\n            <Title\r\n              itemOptions={itemOptions}\r\n              isPromoCode\r\n              itemName={promoCodeTitle}\r\n              hasVersions={hasVersions}\r\n              itemVersion={itemVersion}\r\n              itemVersions={itemVersions}\r\n            />\r\n            {/*<Actions\r\n              index={index}\r\n              businessUrlKey={businessUrlKey}\r\n              onDeleteItem={onDeleteItem}\r\n              search={search}\r\n            />*/}\r\n          </td>\r\n          {/*<PromoCode code={promoCodeTitle} />*/}\r\n          <Qty quantity={quantity} />\r\n          <Price price={hasDiscountedPrice ? discountedPrice : +price * +quantity} />\r\n        </tr>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nOrderItem.propTypes = {\r\n  //myProp: PropTypes.string.isRequired,\r\n  itemName: PropTypes.string.isRequired,\r\n  itemOptions: PropTypes.object,\r\n  businessUrlKey: PropTypes.string.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n  price: PropTypes.number.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { OrderItem } from '../OrderItem/OrderItem';\r\nimport '../OrderItem/OrderItem.css';\r\nexport const OrderItemsList = ({ items, onDeleteItem, onEditItem }) => {\r\n  const { businessUrlKey } = useParams();\r\n  const { search } = useLocation();\r\n\r\n  return (\r\n    <div className=\"bg-secondary order-items-list\">\r\n      <h4 className=\"font-size-lg primary-text\">Items ({items.length})</h4>\r\n      <table className=\"order-items-list-table\">\r\n        <tbody>\r\n          {(items || []).map((item, i) => {\r\n            return (\r\n              <OrderItem\r\n                {...item}\r\n                index={i}\r\n                key={`orderProductItem${i}`}\r\n                businessUrlKey={businessUrlKey}\r\n                search={search}\r\n                onDeleteItem={onDeleteItem}\r\n                onEditItem={onEditItem}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {!items.length && <h5>Shopping cart is empty</h5>}\r\n    </div>\r\n  );\r\n};\r\n\r\nOrderItemsList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Slider, InputNumber } from 'antd';\r\nimport useTipsSource from '../../hooks/order-details/useTipsSource';\r\n\r\nexport const Tips = ({ tips, onChange }) => {\r\n  const [tipsLabels, setTipsLabels] = useState({});\r\n  const [otherMode, setOtherMode] = useState(false);\r\n  const tipsSource = useTipsSource();\r\n  const max = tipsSource ? +Object.keys(tipsSource)[Object.keys(tipsSource).length - 1] + 5 : 0;\r\n  function formatter(value) {\r\n    return `${value}%`;\r\n  }\r\n  useEffect(() => {\r\n    if (tipsSource) {\r\n      setTipsLabels({\r\n        ...tipsSource,\r\n        [max]: 'Other'\r\n      });\r\n    }\r\n  }, [tipsSource]);\r\n  if (!tipsSource) return null;\r\n  const handleOther = (value) => {\r\n    onChange(value ? value : 0);\r\n  };\r\n  const handleSlider = (value) => {\r\n    if (value === max) {\r\n      if (!otherMode) {\r\n        setOtherMode(true);\r\n      }\r\n      onChange(value);\r\n    } else {\r\n      if (otherMode) {\r\n        setOtherMode(false);\r\n      }\r\n      onChange(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"tips\">\r\n      <Slider\r\n        marks={tipsLabels}\r\n        step={null}\r\n        defaultValue={0}\r\n        value={!otherMode ? tips.value : max}\r\n        tooltipVisible={false}\r\n        onChange={handleSlider}\r\n        min={0}\r\n        max={max}\r\n      />\r\n      {otherMode && (\r\n        <div className=\"other-amount\">\r\n          <span className=\"font-size-md\">Enter amount </span>\r\n          <InputNumber\r\n            prefix={'$'}\r\n            formatter={formatter}\r\n            min={0}\r\n            max={100}\r\n            defaultValue={max + 1}\r\n            value={tips.value}\r\n            onChange={handleOther}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTips.propTypes = {\r\n  //myProp: PropTypes.string.isRequired\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default () => {\r\n  const [tipsSource, setTipsSource] = useState(null);\r\n  const businessData = useSelector((state) => state.business.data);\r\n\r\n  useEffect(() => {\r\n    if (!tipsSource && businessData && businessData.tips && businessData.tips.length) {\r\n      let tipsObj = {};\r\n      businessData.tips.map(({ percent, displayText }) => (tipsObj[+percent] = displayText));\r\n      if (Object.keys(tipsObj).length > 0) {\r\n        setTipsSource(tipsObj);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [businessData]);\r\n  return tipsSource;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AiOutlineEdit } from 'react-icons/ai';\r\nimport { Card } from '../Shared/Card/Card';\r\nimport { formatPhoneNumber } from '../../utils/helpers';\r\n\r\nexport const UserDetails = ({ user, toggleUpdateMode }) => {\r\n  return (\r\n    <Card className=\"order-details__user-details\">\r\n      <h4 className=\"flex font-size-lg primary-text\">\r\n        <span>How will we contact you?</span>\r\n        <span onClick={toggleUpdateMode}>\r\n          <AiOutlineEdit />\r\n        </span>\r\n      </h4>\r\n      <h5 className=\"flex\">\r\n        <span>Name:</span>\r\n        <span>{user.firstName}</span>\r\n      </h5>\r\n      <h5 className=\"flex\">\r\n        <span>Phone:</span>\r\n        <span>{formatPhoneNumber(user.phoneNumber)}</span>\r\n      </h5>\r\n      <h5 className=\"flex\">\r\n        <span>E-mail:</span>\r\n        <span>{user.email}</span>\r\n      </h5>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  user: PropTypes.object,\r\n  toggleUpdateMode: PropTypes.func.isRequired\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { scrollToElement } from '../../utils/helpers';\r\nimport './CheckoutIFrame.css';\r\n/*function iframeURLChange(iframe, callback) {\r\n  var lastDispatched = null;\r\n\r\n  var dispatchChange = function () {\r\n    var newHref = iframe.contentWindow.location.href;\r\n\r\n    if (newHref !== lastDispatched) {\r\n      callback(newHref);\r\n      lastDispatched = newHref;\r\n    }\r\n  };\r\n\r\n  var unloadHandler = function () {\r\n    // Timeout needed because the URL changes immediately after\r\n    // the `unload` event is dispatched.\r\n    setTimeout(dispatchChange, 0);\r\n  };\r\n\r\n  function attachUnload() {\r\n    // Remove the unloadHandler in case it was already attached.\r\n    // Otherwise, there will be two handlers, which is unnecessary.\r\n    iframe.contentWindow.removeEventListener(\"unload\", unloadHandler);\r\n    iframe.contentWindow.addEventListener(\"unload\", unloadHandler);\r\n  }\r\n\r\n  iframe.addEventListener(\"load\", function () {\r\n    attachUnload();\r\n\r\n    // Just in case the change wasn't dispatched during the unload event...\r\n    dispatchChange();\r\n  });\r\n\r\n  attachUnload();\r\n}*/\r\n\r\n\r\n\r\nexport const CheckoutIFrame = ({ transactionSetupUrl }) => {\r\n  useEffect(() => {\r\n    scrollToElement(document.getElementById('vantiv-iframe'), 0);\r\n   /* iframeURLChange(document.getElementById(\"vantiv-iframe\"), function (newURL) {\r\n      console.log(\"URL changed:\", newURL);\r\n    });*/\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {transactionSetupUrl && (\r\n        <iframe\r\n          className=\"card bg-secondary\"\r\n          id=\"vantiv-iframe\"\r\n          src={transactionSetupUrl}\r\n          frameBorder=\"0\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nCheckoutIFrame.propTypes = {\r\n  transactionSetupUrl: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Pickup } from './Pickup';\r\nimport { SubTotal } from './SubTotal';\r\nimport { GrossTotal } from './GrossTotal';\r\nimport { OrderItemsList } from './OrderItemList/OrderItemsList';\r\nimport './OrderDetails.css';\r\nimport { Tips } from './Tips';\r\nimport { Alert, Button } from 'antd';\r\nimport { UserDataForm } from '../UserDataForm/UserDataForm';\r\nimport { UserDetails } from './UserDetails';\r\nimport { Form } from '../Shared/Form/Form';\r\nimport { Card } from '../Shared/Card/Card';\r\nimport { CheckoutIFrame } from '../Checkout/CheckoutIFrame';\r\nimport { serviceStatuses } from '../../config/constants';\r\nimport usePreventOrdering from '../../hooks/usePreventOrdering';\r\nimport { Comments } from '../Shared/Comments/Comments';\r\n\r\nexport const OrderDetails = ({\r\n  priceTotal,\r\n  tips,\r\n  taxes,\r\n  extraFee,\r\n  orderPickUp,\r\n  shoppingCartItems,\r\n  priceSubTotal,\r\n  discountedPriceSubTotal,\r\n  orderDiscount,\r\n  businessData,\r\n  user,\r\n  credentials,\r\n  updateMode,\r\n  showSubmitButton,\r\n  toggleUpdateMode,\r\n  orderInProgress,\r\n  orderRequestError,\r\n  submitLabel,\r\n  transactionSetupUrl,\r\n  transactionError,\r\n  registerMemberRequestError,\r\n\r\n  onTipsChange,\r\n  onEditItem,\r\n  onDeleteItem,\r\n  onCreateOrder,\r\n  onCredentialsChange,\r\n  preventOrdering,\r\n\r\n  comment,\r\n  onCommentChange\r\n}) => {\r\n  const { saslName } = businessData;\r\n\r\n  return (\r\n    <div className=\"p-default\">\r\n      <div className=\"order-details\">\r\n        <Pickup\r\n          {...businessData.pickUp}\r\n          orderPickUp={orderPickUp}\r\n          saslName={saslName}\r\n          user={user}\r\n          businessData={businessData}\r\n        />\r\n        <Card>\r\n          <OrderItemsList\r\n            items={shoppingCartItems}\r\n            onDeleteItem={onDeleteItem}\r\n            onEditItem={onEditItem}\r\n          />\r\n          <SubTotal\r\n            orderDiscount={orderDiscount}\r\n            priceSubTotal={priceSubTotal}\r\n            discountedPriceSubTotal={discountedPriceSubTotal}\r\n            taxes={taxes}\r\n            tips={tips}\r\n            extraFee={extraFee}\r\n          />\r\n          <Tips tips={tips} onChange={onTipsChange} />\r\n          <GrossTotal total={priceTotal} />\r\n        </Card>\r\n        <Card>\r\n          <h4 className=\"font-size-lg primary-text\">Comments</h4>\r\n          <Comments\r\n            onTextChange={onCommentChange}\r\n            value={comment}\r\n            placeholder={'Add notes for the Chief'}\r\n          />\r\n        </Card>\r\n\r\n        <Form onSubmit={onCreateOrder}>\r\n          {(!user || (user && updateMode)) && (\r\n            <Card>\r\n              <UserDataForm\r\n                user={user}\r\n                toggleUpdateMode={toggleUpdateMode}\r\n                updateMode={updateMode}\r\n                shouldChangeUpdateMode={true}\r\n                onChange={onCredentialsChange}\r\n                credentials={credentials}\r\n              />\r\n            </Card>\r\n          )}\r\n          {user && !updateMode && <UserDetails user={user} toggleUpdateMode={toggleUpdateMode} />}\r\n          {registerMemberRequestError && (\r\n            <Alert message={registerMemberRequestError} type=\"error\" showIcon closable />\r\n          )}\r\n          {transactionSetupUrl && !orderRequestError && !transactionError && (\r\n            <CheckoutIFrame transactionSetupUrl={transactionSetupUrl} />\r\n          )}\r\n          {transactionError && <Alert message=\"Checkout error.\" type=\"error\" showIcon closable />}\r\n          {orderRequestError && (\r\n            <Alert message=\"Placing order error.\" type=\"error\" showIcon closable />\r\n          )}\r\n          {preventOrdering && (\r\n            <Alert\r\n              message=\"Business doesn't accept orders at this moment.\"\r\n              type=\"warning\"\r\n              showIcon\r\n            />\r\n          )}\r\n          {showSubmitButton && (\r\n            <Button\r\n              className=\"font-size-md\"\r\n              size=\"large\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              block\r\n              loading={orderInProgress}\r\n              disabled={\r\n                preventOrdering ||\r\n                !shoppingCartItems.length ||\r\n                !credentials.firstName ||\r\n                !credentials.email ||\r\n                !credentials.mobile\r\n              }\r\n            >\r\n              {submitLabel}\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOrderDetails.propTypes = {\r\n  pickUp: PropTypes.object,\r\n  products: PropTypes.array,\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n  priceSubTotal: PropTypes.number,\r\n  onCreateOrder: PropTypes.func.isRequired\r\n};\r\n","import { formatOrderData, isToday, pad } from '../../utils/helpers';\r\nimport { clearCart, createOrder, resetOrderError } from '../../redux/slices/shoppingCart';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useCalculateOrderPrice from './useCalculateOrderPrice';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\n\r\nexport default (businessData, user) => {\r\n  const dispatch = useDispatch();\r\n  const { businessUrlKey } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n\r\n  const loyaltyAndOrderHistory = useSelector((state) => state.loyaltyAndOrderHistory.data);\r\n  const [orderInProgress, setOrderInProgress] = useState(false);\r\n  const shoppingCartItems = useSelector((state) => state.shoppingCart.items);\r\n  const orderRequestError = useSelector((state) => state.shoppingCart.error);\r\n  const priceSubTotal = useSelector((state) => state.shoppingCart.priceSubTotal);\r\n  const itemsWithDiscounts = useSelector((state) => state.shoppingCart.itemsWithDiscounts);\r\n  const itemsWithGroupDiscounts = useSelector(\r\n    (state) => state.shoppingCart.itemsWithGroupDiscounts\r\n  );\r\n  const orderPickUp = useSelector((state) => state.shoppingCart.orderPickUp);\r\n  const tablePath = useSelector((state) => state.shoppingCart.tablePath);\r\n  const [comment, setComment] = useState('');\r\n  const handleCommentChange = (e) => setComment(e.target.value);\r\n  const [\r\n    priceTotal,\r\n    discountedPriceSubTotal,\r\n    orderDiscount,\r\n    tips,\r\n    taxes,\r\n    extraFee,\r\n    onTipsChange\r\n  ] = useCalculateOrderPrice(businessData, priceSubTotal, shoppingCartItems);\r\n\r\n  const handleResetOrderError = () => dispatch(resetOrderError());\r\n  const handleCreateOrder = (newUser = null, transactionData = null) => {\r\n    const { serviceAccommodatorId, serviceLocationId, catalogId, pickUp } = businessData;\r\n    let requestedDeliveryDate = '';\r\n    if (pickUp && pickUp.futureDays && pickUp.futureDays.length) {\r\n      let selectedDay = pickUp.futureDays.filter(\r\n        ({ displayText }) => displayText === orderPickUp.day\r\n      );\r\n      if (selectedDay && selectedDay.length) {\r\n        const { displayText, day, month, year } = selectedDay[0];\r\n        requestedDeliveryDate = `${year}-${pad(month)}-${day}T${orderPickUp.time}:PDT`;\r\n      }\r\n    }\r\n\r\n    const orderData = formatOrderData({\r\n      comment: comment ? comment : null,\r\n      loyaltyStatus: loyaltyAndOrderHistory?.loyaltyForUser?.loyaltyStatus,\r\n      items: shoppingCartItems,\r\n      itemsWithDiscounts,\r\n      itemsWithGroupDiscounts,\r\n      user: newUser ? newUser : user,\r\n      serviceAccommodatorId,\r\n      serviceLocationId,\r\n      catalogId,\r\n      priceSubTotal,\r\n      deliveryType: orderPickUp.deliveryType,\r\n      requestedDeliveryDate,\r\n      futureOrRegular: isToday(orderPickUp.day) ? 'REGULAR' : 'FUTURE',\r\n      //prices\r\n      subTotal: priceSubTotal,\r\n      tipAmount: tips,\r\n      taxAmount: taxes.value,\r\n      totalAmount: priceTotal,\r\n      tablePath,\r\n      transactionData\r\n    });\r\n\r\n    dispatch(createOrder(orderData)).then(({ payload, error }) => {\r\n      if (payload && payload.orderUUID && !error) {\r\n        dispatch(clearCart());\r\n        history.push(`/${businessUrlKey}/order-status/${payload.orderUUID}${search}`);\r\n      }\r\n      if (error) {\r\n        setOrderInProgress(false);\r\n      }\r\n    });\r\n  };\r\n  return [\r\n    orderInProgress,\r\n    setOrderInProgress,\r\n    shoppingCartItems,\r\n    handleCreateOrder,\r\n    handleResetOrderError,\r\n    priceTotal,\r\n    discountedPriceSubTotal,\r\n    orderDiscount,\r\n    tips,\r\n    taxes,\r\n    extraFee,\r\n    onTipsChange,\r\n    orderPickUp,\r\n    priceSubTotal,\r\n    orderRequestError,\r\n    comment,\r\n    handleCommentChange\r\n  ];\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { amountTypes } from '../../config/constants';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { calculateDiscountedPrice, getPercent, floatNum } from '../../utils/helpers';\r\n\r\nexport default (businessData, priceSubTotal, shoppingCartItems) => {\r\n  const { search } = useLocation();\r\n  const [priceTotal, setPriceTotal] = useState(0);\r\n  const [discountedPriceSubTotal, setDiscountedPriceSubTotal] = useState(0);\r\n\r\n  const [tips, setTips] = useState({\r\n    value: 0,\r\n    percentValue: 0\r\n  });\r\n\r\n  const [taxes, setTaxes] = useState({\r\n    value: 0,\r\n    percent: 0\r\n  });\r\n  const [extraFee, setExtraFee] = useState({\r\n    value: 0,\r\n    label: ''\r\n  });\r\n  const [orderDiscount, setOrderDiscount] = useState({\r\n    discount: 0,\r\n    type: '',\r\n    title: '',\r\n    minimumPurchase: 0\r\n  });\r\n  const handleTipsChange = (value) => {\r\n    setTips({\r\n      value: value ? value : 0,\r\n      percentValue: value\r\n        ? //TODO: check if tips should be calculated with taxes + fees\r\n          getPercent(discountedPriceSubTotal + +(+extraFee.value) + +taxes.value, value)\r\n        : 0\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (businessData) {\r\n      const urlParams = new URLSearchParams(search);\r\n      const type = urlParams.get('t');\r\n      const uuid = urlParams.get('u');\r\n      const { discounts } = businessData;\r\n\r\n      if (type && uuid) {\r\n        const discountItem = discounts.filter(({ discountUUID }) => discountUUID === uuid)[0];\r\n        if (discountItem) {\r\n          const {\r\n            discount,\r\n            type,\r\n            title,\r\n            minimumPurchase,\r\n            applicableItemUUID,\r\n            applicableGroup\r\n          } = discountItem;\r\n          if (!applicableItemUUID && !applicableGroup) {\r\n            setOrderDiscount({\r\n              discount,\r\n              type,\r\n              title,\r\n              minimumPurchase\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [businessData]);\r\n\r\n  useEffect(() => {\r\n    const { discount, type, title, minimumPurchase } = orderDiscount;\r\n\r\n    if (discount && priceSubTotal >= minimumPurchase && type) {\r\n      setDiscountedPriceSubTotal(calculateDiscountedPrice(type, discount, priceSubTotal));\r\n    } else {\r\n      setDiscountedPriceSubTotal(priceSubTotal);\r\n    }\r\n  }, [priceSubTotal, orderDiscount]);\r\n\r\n  useEffect(() => {\r\n    setPriceTotal(\r\n      floatNum(discountedPriceSubTotal + tips.percentValue + +extraFee.value + +taxes.value)\r\n    );\r\n  }, [tips]);\r\n\r\n  useEffect(() => {\r\n    let value = 0;\r\n    let taxValue = 0;\r\n    if (businessData.extraFees) {\r\n      const { taxRate, extraFeeType, extraFeeValue = 0, extraFeeLabel } = businessData.extraFees;\r\n      if (taxRate && discountedPriceSubTotal) {\r\n        taxValue = getPercent(discountedPriceSubTotal + extraFeeValue, taxRate);\r\n        setTaxes({\r\n          value: taxValue,\r\n          percent: taxRate\r\n        });\r\n      }\r\n      switch (extraFeeType) {\r\n        case amountTypes.PERCENT:\r\n          if (discountedPriceSubTotal && extraFeeValue) {\r\n            value = getPercent(discountedPriceSubTotal, extraFeeValue);\r\n          }\r\n          setExtraFee({\r\n            value,\r\n            label: extraFeeLabel\r\n          });\r\n          break;\r\n        case amountTypes.AMOUNT:\r\n          value = extraFeeValue;\r\n          setExtraFee({\r\n            value,\r\n            label: extraFeeLabel\r\n          });\r\n          break;\r\n        case amountTypes.EXACT:\r\n          value = extraFeeValue;\r\n          setExtraFee({\r\n            value,\r\n            label: extraFeeLabel\r\n          });\r\n          break;\r\n      }\r\n    }\r\n    if (!shoppingCartItems.length) {\r\n      return setPriceTotal(0);\r\n    }\r\n    setPriceTotal(floatNum(discountedPriceSubTotal + value + taxValue));\r\n  }, [businessData.extraFees, discountedPriceSubTotal, shoppingCartItems]);\r\n\r\n  return [\r\n    priceTotal,\r\n    discountedPriceSubTotal,\r\n    orderDiscount,\r\n    tips,\r\n    taxes,\r\n    extraFee,\r\n    handleTipsChange\r\n  ];\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { OrderDetails } from '../components/OrderDetails/OrderDetails';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { deleteCartItem } from '../redux/slices/shoppingCart';\r\n\r\nimport { getPercent, scrollToElement } from '../utils/helpers';\r\nimport useMemberData from '../hooks/user/useMemberData';\r\n\r\nimport useCreateOrder from '../hooks/order-details/useCreateOrder';\r\nimport { paymentProcessors } from '../config/constants';\r\n\r\nimport useCheckout from '../hooks/order-details/useCheckout';\r\nimport usePreventOrdering from '../hooks/usePreventOrdering';\r\n\r\nconst OrderDetailsPage = ({ businessData, user }) => {\r\n  const dispatch = useDispatch();\r\n  const { businessUrlKey } = useParams();\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { acceptCreditCards, paymentProcessor } = businessData.payment;\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const toggleUpdateMode = () => setUpdateMode(!updateMode);\r\n\r\n  const [\r\n    credentials,\r\n    credentialsChanged,\r\n    onCredentialsChange,\r\n    onSignUpSubmit,\r\n    registerMemberRequestError\r\n  ] = useMemberData(businessData, user, updateMode, toggleUpdateMode);\r\n\r\n  const [\r\n    orderInProgress,\r\n    setOrderInProgress,\r\n    shoppingCartItems,\r\n    onCreateOrder,\r\n    onResetOrderError,\r\n    priceTotal,\r\n    discountedPriceSubTotal,\r\n    orderDiscount,\r\n    tips,\r\n    taxes,\r\n    extraFee,\r\n    onTipsChange,\r\n    orderPickUp,\r\n    priceSubTotal,\r\n    orderRequestError,\r\n    comment,\r\n    onCommentChange\r\n  ] = useCreateOrder(businessData, user);\r\n\r\n  const [checkoutMode, setCheckoutMode, transactionSetupUrl, transactionError] = useCheckout(\r\n    businessData,\r\n    shoppingCartItems,\r\n    priceTotal,\r\n    onCreateOrder,\r\n    orderRequestError\r\n  );\r\n\r\n  const [preventOrdering] = usePreventOrdering(businessData);\r\n\r\n  useEffect(() => {\r\n    if (!shoppingCartItems || !shoppingCartItems.length) {\r\n      history.push(`/${businessUrlKey}/${search}`);\r\n    }\r\n  }, []);\r\n  const handleEditItem = (index) =>\r\n    history.push(`/${businessUrlKey}/shopping-cart/${index}${search}`);\r\n\r\n  const handleDeleteCartItem = (index) => dispatch(deleteCartItem(index));\r\n  const handlePlaceOrder = (e) => {\r\n    e.preventDefault();\r\n    if (!orderPickUp.day || !orderPickUp.time) {\r\n      return scrollToElement(document.getElementById('pickup-selectors'));\r\n    }\r\n\r\n    if (user && !credentialsChanged) {\r\n      if (acceptCreditCards && paymentProcessor === paymentProcessors.VANTIV_HID) {\r\n        setCheckoutMode(true);\r\n        if (orderRequestError) {\r\n          onResetOrderError();\r\n        }\r\n      } else {\r\n        setOrderInProgress(true);\r\n        onCreateOrder();\r\n      }\r\n    } else {\r\n      setOrderInProgress(true);\r\n      onSignUpSubmit(e, updateMode, user, true)\r\n        .then((response) => {\r\n          if (acceptCreditCards && paymentProcessor === paymentProcessors.VANTIV_HID) {\r\n            setOrderInProgress(false);\r\n            setCheckoutMode(true);\r\n          } else {\r\n            onCreateOrder(response && response.payload ? response.payload : null);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error) {\r\n            setOrderInProgress(false);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OrderDetails\r\n      comment={comment}\r\n      onCommentChange={onCommentChange}\r\n      preventOrdering={preventOrdering}\r\n      registerMemberRequestError={registerMemberRequestError}\r\n      orderRequestError={orderRequestError}\r\n      transactionSetupUrl={transactionSetupUrl}\r\n      transactionError={transactionError}\r\n      onTipsChange={onTipsChange}\r\n      taxes={taxes}\r\n      extraFee={extraFee}\r\n      tips={tips}\r\n      priceTotal={priceTotal}\r\n      priceSubTotal={priceSubTotal}\r\n      orderDiscount={orderDiscount}\r\n      discountedPriceSubTotal={discountedPriceSubTotal}\r\n      orderInProgress={orderInProgress}\r\n      credentials={credentials}\r\n      onCredentialsChange={onCredentialsChange}\r\n      orderPickUp={orderPickUp}\r\n      businessData={businessData}\r\n      shoppingCartItems={shoppingCartItems}\r\n      onEditItem={handleEditItem}\r\n      onDeleteItem={handleDeleteCartItem}\r\n      onCreateOrder={handlePlaceOrder}\r\n      user={user}\r\n      showSubmitButton={!(acceptCreditCards && checkoutMode)}\r\n      updateMode={updateMode}\r\n      checkoutMode={checkoutMode}\r\n      toggleUpdateMode={toggleUpdateMode}\r\n      submitLabel={acceptCreditCards ? 'Checkout' : 'Place Order'}\r\n    />\r\n  );\r\n};\r\nOrderDetailsPage.propTypes = {\r\n  //myProp: PropTypes.string.isRequired\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { paymentAPI } from '../../services/api';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nconst customVantivStyles = `\r\nbody {\r\n  font-family: 'Poppins', sans-serif !important;\r\n}\r\n.cvv{\r\n  width: 55px;\r\n}\r\n.selectOption {\r\n  height: 28px;\r\n  border-radius: 2px;\r\n}\r\n.inputText {\r\n  border-radius: 2px;\r\n  height: 20px;\r\n}\r\n.buttonEmbedded {\r\n  background-color: #0097a7 !important;\r\n  border: none !important;\r\n  border-radius: 3px !important;\r\n  padding-top: 10px !important;\r\n  padding-bottom: 10px !important;\r\n  font-size: 1.2em !important;\r\n  display: block !important;\r\n  text-align: center;\r\n  margin-bottom: 1em;\r\n  margin-top: 1em;\r\n}\r\n.buttonEmbedded:visited {\r\n  background-color: #0097a7 !important;\r\n  border: none !important;\r\n  border-radius: 3px !important;\r\n  padding-top: 10px !important;\r\n  padding-bottom: 10px !important;\r\n  font-size: 1.2em !important;\r\n  display: block !important;\r\n  text-align: center;\r\n  margin-bottom: 1em;\r\n  margin-top: 1em;\r\n}\r\n#tdCardInformation {\r\nborder:none;\r\ncolor: #0097A7;\r\nfont-size:14px;\r\n}\r\n#tdTransactionInformationHeader {\r\nborder:none;\r\ncolor: #0097A7;\r\nfont-size:14px;\r\n}\r\n#tdManualEntry { ;\r\nborder:none; ;\r\n}\r\n\r\n#tdTransactionInformationHeader {\r\nborder:none;\r\n}\r\n\r\n#tdTransactionInformation {\r\nborder:none;\r\n}\r\n\r\n#tdTransactionButtons {\r\nborder:none;\r\n}\r\n`;\r\nexport default (\r\n  businessData,\r\n  shoppingCartItems,\r\n  priceTotal,\r\n  handleCreateOrder,\r\n  orderRequestError\r\n) => {\r\n  const { businessUrlKey } = useParams();\r\n  const { search } = useLocation();\r\n  const [transactionSetup, setTransactionSetup] = useState(null);\r\n  const [transactionSetupUrl, setTransactionSetupUrl] = useState(null);\r\n  const [transactionError, setTransactionError] = useState(false);\r\n  const [checkoutMode, setCheckoutMode] = useState(false);\r\n\r\n  const { serviceAccommodatorId, serviceLocationId } = businessData;\r\n  const { acceptCreditCards, paymentProcessor } = businessData.payment;\r\n  useEffect(() => {\r\n    if (transactionSetupUrl) {\r\n      const handler = (event) => {\r\n        if (event.origin !== window.location.origin) return;\r\n\r\n        if (event.data && event.data.message) {\r\n          const { message } = event.data;\r\n          // console.log(message);\r\n          if (\r\n            message &&\r\n            message.indexOf('TransactionSetupID') !== -1 &&\r\n            message.indexOf('HostedPaymentStatus') !== -1\r\n          ) {\r\n            const urlParams = new URLSearchParams(message);\r\n            const hostedPaymentStatus = urlParams.get('HostedPaymentStatus');\r\n            const transactionID = urlParams.get('TransactionID');\r\n            const validationCode = urlParams.get('ValidationCode');\r\n            const expressResponseCode = urlParams.get('ExpressResponseCode');\r\n            const expressResponseMessage = urlParams.get('ExpressResponseMessage');\r\n            const CVVResponseCode = urlParams.get('CVVResponseCode');\r\n            const approvalNumber = urlParams.get('ApprovalNumber');\r\n            const lastFour = urlParams.get('LastFour');\r\n            const cardLogo = urlParams.get('CardLogo');\r\n            const approvedAmount = urlParams.get('ApprovedAmount');\r\n\r\n            if (hostedPaymentStatus === 'Cancelled') {\r\n              setTransactionSetupUrl(null);\r\n              setCheckoutMode(false);\r\n            } else if (\r\n              hostedPaymentStatus === 'Complete' &&\r\n              transactionID &&\r\n              shoppingCartItems &&\r\n              shoppingCartItems.length &&\r\n              transactionSetup &&\r\n              transactionSetup.validationCode === validationCode\r\n            ) {\r\n              handleCreateOrder(null, {\r\n                ...transactionSetup,\r\n                hostedPaymentStatus,\r\n                transactionID,\r\n                expressResponseCode,\r\n                expressResponseMessage,\r\n                CVVResponseCode,\r\n                approvalNumber,\r\n                lastFour,\r\n                cardLogo,\r\n                approvedAmount,\r\n                paymentProcessor\r\n              });\r\n            } else {\r\n              setTransactionSetupUrl(null);\r\n              setCheckoutMode(false);\r\n              setTransactionError(true);\r\n            }\r\n          }\r\n        }\r\n      };\r\n      window.addEventListener('message', handler);\r\n      // clean up\r\n      return () => window.removeEventListener('message', handler);\r\n    }\r\n  }, [transactionSetup, transactionSetupUrl]); // empty array => run only once\r\n\r\n  useEffect(() => {\r\n    if (\r\n      checkoutMode &&\r\n     /* !transactionSetupUrl &&*/\r\n      acceptCreditCards &&\r\n      paymentProcessor &&\r\n      shoppingCartItems &&\r\n      shoppingCartItems.length\r\n    ) {\r\n      // paymentAPI.transactionSetup()\r\n      paymentAPI\r\n        .getTransactionSetupID({\r\n          serviceAccommodatorId,\r\n          serviceLocationId,\r\n          transactionAmount: priceTotal,\r\n          demo: true,\r\n          processTransactionTitle: 'Place Order',\r\n          returnURL: `${window.location.origin}/${businessUrlKey}/checkout-redirect${search}`,\r\n          customCSS: customVantivStyles\r\n        })\r\n        .then((response) => {\r\n          if (response.data) {\r\n            const { transactionSetupId, iframeSrc, orderUUID } = response.data;\r\n            if (transactionSetupId && iframeSrc) {\r\n              setTransactionError(false);\r\n              setTransactionSetup(response.data);\r\n              setTransactionSetupUrl(`${iframeSrc}?TransactionSetupID=${transactionSetupId}`);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }, [checkoutMode]);\r\n\r\n  useEffect(() => {\r\n    if (orderRequestError) {\r\n      setCheckoutMode(false);\r\n      setTransactionSetupUrl(null);\r\n      setTransactionSetup(null);\r\n    }\r\n  }, [orderRequestError]);\r\n\r\n  return [checkoutMode, setCheckoutMode, transactionSetupUrl, transactionError];\r\n};\r\n"],"sourceRoot":""}