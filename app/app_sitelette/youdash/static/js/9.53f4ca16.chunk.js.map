{"version":3,"sources":["components/Shared/Form/Form.js","components/Shared/Comments/Comments.js","hooks/product-item/useProductItem.js","components/ProductItem/Image.js","components/ProductItem/Description.js","components/ProductItem/Order.js","components/ProductItem/SubItems.js","components/ProductItem/SubItemsBlock.js","components/ProductItem/SideSplitter.js","components/ProductItem/ProductItem.js","pages/product-item.js"],"names":["Form","onSubmit","children","className","TextArea","Input","Comments","value","placeholder","onTextChange","multiple","rows","onChange","updateSubSubItemsVersionPriceAdjustment","version","items","oldPriceDifference","newPriceDifference","updatedItems","map","item","subSubItems","length","subSubItem","versionPriceAdjustment","innerFiltered","filter","adjustment","versionId","priceAdjustment","cost","isSelected","useState","productItem","setProductItem","useEffect","produce","draft","quantity","parentPropIndex","parentPropName","subPropIndex","subPropName","isRadio","itemOptions","radioItem","tmpPrice","price","maxSubSubCount","minSubSubCount","selectedLength","i","isDisabled","e","comments","target","filtered","itemVersions","itemVersion","previousItemVersion","filteredPreviousVersionData","oldPrice","newPrice","subOptions","subItems","subItemsLeft","result","Image","url","itemName","src","alt","Description","description","Order","onQtyMinus","onQtyPlus","addToCart","isShoppingCart","preventOrdering","shareData","title","text","shape","onClick","handleNativeShare","type","message","showIcon","block","size","disabled","SubItems","promptText","addOns","onCheckboxChange","selectorType","handleCheckboxChange","index","checked","subSubItemName","id","key","SubItemsBlock","subItem","subItemName","SideSplitter","side","ProductItem","onItemVersionChange","mediaURLs","shortDescription","longDescription","canSplitLeftRight","selectDefaultValue","canSplit","Container","Card","ImagePlaceholder","getMediaImageUrl","hasVersions","Group","vIndex","version1DisplayText","ProductItemPage","businessData","usePreventOrdering","search","useLocation","useParams","businessUrlKey","productId","history","useHistory","dispatch","useDispatch","itemsById","useProductItem","handleSubItemCheckboxChange","handleQuantityPlus","handleQuantityMinus","handleCommentsChange","handleItemVersionChange","addCartItem","push"],"mappings":"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","file":"static/js/9.53f4ca16.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Form.css';\r\nexport const Form = ({ onSubmit, children, className = '' }) => (\r\n  <form onSubmit={onSubmit} className={`form ${className}`}>\r\n    {children}\r\n  </form>\r\n);\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.any,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\nimport './Comments.css';\r\nconst { TextArea } = Input;\r\n\r\nexport const Comments = ({ value, placeholder, onTextChange }) => (\r\n  <div className=\"comments bg-secondary\">\r\n    <TextArea\r\n      className=\"bg-secondary\"\r\n      placeholder={placeholder}\r\n      multiple\r\n      rows={4}\r\n      value={value}\r\n      onChange={onTextChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nComments.propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  onTextChange: PropTypes.func.isRequired\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { produce } from 'immer';\r\nexport const updateSubSubItemsVersionPriceAdjustment = (version, items) => {\r\n  let oldPriceDifference = 0;\r\n  let newPriceDifference = 0;\r\n  let updatedItems = items.map((item) => {\r\n    if (!item || !item.subSubItems || !item.subSubItems.length) return item;\r\n    return {\r\n      ...item,\r\n      subSubItems: item.subSubItems.map((subSubItem) => {\r\n        //update for subSubItems with multiple versionPriceAdjustment array\r\n        if (subSubItem.versionPriceAdjustment && subSubItem.versionPriceAdjustment.length > 0) {\r\n          const innerFiltered = subSubItem.versionPriceAdjustment.filter(\r\n            (adjustment) => adjustment.versionId === version\r\n          );\r\n\r\n          if (innerFiltered && innerFiltered.length > 0) {\r\n            if (subSubItem.priceAdjustment && innerFiltered[0].cost) {\r\n              //re-calc cost only is item was selected\r\n              if (subSubItem.isSelected) {\r\n                //need to get previous versionPriceAdjustment value and subtract it from overall price value\r\n                oldPriceDifference += subSubItem.priceAdjustment;\r\n                //then need to apply new price\r\n                newPriceDifference += innerFiltered[0].cost;\r\n              }\r\n              subSubItem.priceAdjustment = innerFiltered[0].cost;\r\n            }\r\n          }\r\n        } else if (!subSubItem.versionPriceAdjustment && subSubItem.priceAdjustment) {\r\n          //update for subSubItems with single priceAdjustment property\r\n          if (subSubItem.isSelected) {\r\n            oldPriceDifference += subSubItem.priceAdjustment;\r\n            newPriceDifference += subSubItem.priceAdjustment;\r\n          }\r\n        }\r\n        //TODO: need to check this with some working radio values\r\n        /*        if (\r\n          !subSubItem.versionPriceAdjustment &&\r\n          subSubItem.isSelected &&\r\n          subSubItem.priceAdjustment &&\r\n          item.selectorType &&\r\n          item.selectorType === 'RADIO'\r\n        ) {\r\n          newPriceDifference += subSubItem.priceAdjustment;\r\n        }*/\r\n\r\n        return subSubItem;\r\n      })\r\n    };\r\n  });\r\n\r\n  return {\r\n    oldPriceDifference,\r\n    newPriceDifference,\r\n    items: updatedItems\r\n  };\r\n};\r\nexport default (item) => {\r\n  const [productItem, setProductItem] = useState(null);\r\n  const handleSubItemCheckboxChange = (\r\n    parentPropIndex,\r\n    parentPropName,\r\n    subPropIndex,\r\n    subPropName,\r\n    priceAdjustment,\r\n    value,\r\n    isRadio\r\n  ) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        if (isRadio) {\r\n          draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n            parentPropName\r\n          ][parentPropIndex]['subSubItems'].map((radioItem) => {\r\n            if (radioItem.priceAdjustment && radioItem.isSelected) {\r\n              let tmpPrice = (draft.price -= radioItem.priceAdjustment);\r\n              draft.price = tmpPrice >= 0 ? tmpPrice : 0;\r\n            }\r\n            return {\r\n              ...radioItem,\r\n              isSelected: false\r\n            };\r\n          });\r\n        }\r\n\r\n        draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'][subPropIndex][\r\n          subPropName\r\n        ] = value;\r\n\r\n        if (priceAdjustment && value) {\r\n          draft.price += priceAdjustment;\r\n        } else if (priceAdjustment && !value) {\r\n          let tmpPrice = (draft.price -= priceAdjustment);\r\n          draft.price = tmpPrice >= 0 ? tmpPrice : 0;\r\n        }\r\n\r\n        const { maxSubSubCount, minSubSubCount } = draft.itemOptions[parentPropName][\r\n          parentPropIndex\r\n        ];\r\n        if (maxSubSubCount && !isRadio) {\r\n          const selectedLength = draft.itemOptions[parentPropName][parentPropIndex][\r\n            'subSubItems'\r\n          ].filter((i) => i.isSelected).length;\r\n          if (selectedLength === maxSubSubCount) {\r\n            draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n              parentPropName\r\n            ][parentPropIndex]['subSubItems'].map((item) =>\r\n              item.isSelected ? item : { ...item, isDisabled: true }\r\n            );\r\n          } else {\r\n            draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n              parentPropName\r\n            ][parentPropIndex]['subSubItems'].map((item) =>\r\n              item.isDisabled ? { ...item, isDisabled: false } : item\r\n            );\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCommentsChange = (e) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.comments = e.target.value;\r\n      })\r\n    );\r\n  };\r\n  const handleQuantityPlus = () => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.quantity = draft.quantity + 1;\r\n      })\r\n    );\r\n  };\r\n  const handleQuantityMinus = () => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.quantity = draft.quantity > 1 ? draft.quantity - 1 : 1;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleItemVersionChange = (version) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        const filtered = draft.itemVersions.filter(({ itemVersion }) => itemVersion === version);\r\n        const previousItemVersion = draft.itemVersion;\r\n\r\n        const filteredPreviousVersionData = draft.itemVersions.filter(\r\n          ({ itemVersion }) =>\r\n            itemVersion ===\r\n            (typeof previousItemVersion === 'object'\r\n              ? previousItemVersion.versionId\r\n              : previousItemVersion)\r\n        );\r\n        if (\r\n          filteredPreviousVersionData &&\r\n          filteredPreviousVersionData.length > 0 &&\r\n          filtered &&\r\n          filtered.length > 0\r\n        ) {\r\n          let oldPrice = filteredPreviousVersionData[0].price;\r\n          let newPrice = filtered[0].price;\r\n          draft.price -= oldPrice;\r\n          draft.price += newPrice;\r\n\r\n          draft.itemVersion = filtered[0].itemVersion;\r\n\r\n          let subOptions = draft?.itemOptions?.subOptions;\r\n          let subItems = draft?.itemOptions?.subItems;\r\n          let subItemsLeft = draft?.itemOptions?.subItemsLeft;\r\n\r\n          if (subOptions && subOptions.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subOptions);\r\n            draft.itemOptions.subOptions = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n          if (subItems && subItems.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subItems);\r\n            draft.itemOptions.subItems = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n          if (subItemsLeft && subItemsLeft.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subItemsLeft);\r\n            draft.itemOptions.subItemsLeft = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (item && typeof item !== 'undefined') {\r\n      setProductItem(\r\n        produce(item, (draft) => {\r\n          if (!item.quantity) {\r\n            draft.quantity = 1;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }, [item]);\r\n  return [\r\n    productItem,\r\n    handleSubItemCheckboxChange,\r\n    handleQuantityPlus,\r\n    handleQuantityMinus,\r\n    handleCommentsChange,\r\n    handleItemVersionChange\r\n  ];\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Image = ({ url, itemName }) => (\r\n  <img className=\" product-image\" src={url} alt={itemName} />\r\n);\r\n\r\nImage.propTypes = {\r\n  url: PropTypes.any.isRequired,\r\n  itemName: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Description = ({ itemName, price, description }) => (\r\n  <div className=\"product-description product-row\">\r\n    <div className=\"product-title font-size-lg\">\r\n      <h4 className=\"primary-text\">{itemName}</h4>\r\n      <h4 className=\"product-price\">{price}$</h4>\r\n    </div>\r\n    <div className=\"product-description-text\">{description}</div>\r\n  </div>\r\n);\r\n\r\nDescription.propTypes = {\r\n  itemName: PropTypes.string.isRequired,\r\n  price: PropTypes.any,\r\n  description: PropTypes.any\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Button } from 'antd';\r\nimport { FaMinus, FaPlus } from 'react-icons/fa';\r\nimport { AiOutlineShareAlt } from 'react-icons/ai';\r\nimport { handleNativeShare } from '../../utils/helpers';\r\n\r\nexport const Order = ({\r\n  quantity,\r\n  onQtyMinus,\r\n  onQtyPlus,\r\n  addToCart,\r\n  isShoppingCart,\r\n  preventOrdering\r\n}) => {\r\n  const shareData = {\r\n    title: 'YouDash French Bakery',\r\n    text: 'YouDash French Bakery - the best bakery in the world!',\r\n    url: 'https://youdash.co/french-bakery'\r\n  };\r\n\r\n  const handleShare = () => handleNativeShare(shareData);\r\n  return (\r\n    <div className=\"product-order\">\r\n      <div className=\"flex product-order__row\">\r\n        <Button\r\n          shape=\"circle\"\r\n          onClick={handleShare}\r\n          className=\"product-order__share-btn font-size-md\"\r\n        >\r\n          <AiOutlineShareAlt />\r\n        </Button>\r\n        <div className=\"product-order-counter\">\r\n          <span className=\"product-order-counter-label font-size-sm\">Quantity</span>\r\n          <Button type=\"primary\" shape=\"circle\" onClick={onQtyMinus}>\r\n            <FaMinus />\r\n          </Button>\r\n          <span className=\"primary-text product-order-counter-quantity\">{quantity}</span>\r\n          <Button type=\"primary\" shape=\"circle\" onClick={onQtyPlus}>\r\n            <FaPlus />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {preventOrdering && (\r\n        <Alert message=\"Business doesn't accept orders at this moment.\" type=\"warning\" showIcon />\r\n      )}\r\n      <Button\r\n        className=\"font-size-md\"\r\n        type=\"primary\"\r\n        block\r\n        size=\"large\"\r\n        disabled={!quantity || preventOrdering}\r\n        onClick={addToCart}\r\n      >\r\n        {!isShoppingCart ? 'Add to cart' : 'Apply changes'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nOrder.propTypes = {\r\n  quantity: PropTypes.number,\r\n  onQtyPlus: PropTypes.func.isRequired,\r\n  onQtyMinus: PropTypes.func.isRequired,\r\n  addToCart: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Checkbox } from 'antd';\r\nimport { Radio } from 'antd';\r\n\r\nexport const SubItems = ({\r\n  title,\r\n  promptText,\r\n  addOns,\r\n  parentPropName,\r\n  parentPropIndex,\r\n  onCheckboxChange,\r\n  selectorType\r\n}) => {\r\n  const handleCheckboxChange = (index, priceAdjustment, e, isRadio = false) => {\r\n    onCheckboxChange(\r\n      parentPropIndex,\r\n      parentPropName,\r\n      index,\r\n      'isSelected',\r\n      priceAdjustment,\r\n      e.target.checked,\r\n      isRadio\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-row bg-secondary\">\r\n      <h4 className=\"font-size-md\">{title}</h4>\r\n      {promptText && <h5 className=\"font-size-sm\">{promptText}</h5>}\r\n      {selectorType === 'CHECKBOX' && (\r\n        <div className=\"addons-row\">\r\n          {(addOns || []).map(\r\n            ({ subSubItemName, id, isSelected, isDisabled, priceAdjustment }, index) => {\r\n              // console.log(`${subSubItemName} ${priceAdjustment}`);\r\n              return (\r\n                <div key={`${parentPropName}${parentPropIndex}${index}`} className=\"choice\">\r\n                  <Checkbox\r\n                    disabled={isDisabled}\r\n                    onChange={(e) => handleCheckboxChange(index, priceAdjustment, e)}\r\n                    checked={isSelected}\r\n                  >\r\n                    <span className=\"addon-label addon-label-checkbox font-size-sm\">\r\n                      {subSubItemName}\r\n                      {priceAdjustment ? (\r\n                        <span className=\"addon-label-checkbox__price font-size-xs\">\r\n                          (${priceAdjustment})\r\n                        </span>\r\n                      ) : null}\r\n                    </span>\r\n                  </Checkbox>\r\n                </div>\r\n              );\r\n            }\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {selectorType === 'RADIO' && (\r\n        <div className=\"addons-row\">\r\n          {/*<Radio.Group onChange={handleRadioChange} value={radioValue}>*/}\r\n          <div className=\"preferences\">\r\n            {addOns.map(\r\n              ({ subSubItemName, id, isSelected, isDisabled, priceAdjustment }, index) => {\r\n                return (\r\n                  <div key={`${parentPropName}${parentPropIndex}${index}`} className=\"choice\">\r\n                    <Radio\r\n                      disabled={isDisabled}\r\n                      value={index}\r\n                      checked={isSelected}\r\n                      onChange={(e) => handleCheckboxChange(index, priceAdjustment, e, true)}\r\n                    >\r\n                      <span className=\"addon-label font-size-sm\">\r\n                        {subSubItemName}\r\n                        {priceAdjustment ? (\r\n                          <span className=\"addon-label-checkbox__price font-size-xs\">\r\n                            (${priceAdjustment})\r\n                          </span>\r\n                        ) : null}\r\n                      </span>\r\n                    </Radio>\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n          {/*</Radio.Group>*/}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSubItems.propTypes = {\r\n  addOns: PropTypes.array,\r\n  preferences: PropTypes.array\r\n};\r\n","import { SubItems } from './SubItems';\r\nimport React from 'react';\r\n\r\nexport const SubItemsBlock = ({ subItems, onCheckboxChange, parentPropName }) => {\r\n  return (subItems || []).map((subItem, i) => {\r\n    if (!subItem.selectorType) return null;\r\n    /* console.log(subItem.maxSubSubCount);\r\n        console.log(subItem.minSubSubCount);*/\r\n    return (\r\n      <SubItems\r\n        maxSubSubCount={subItem.maxSubSubCount}\r\n        minSubSubCount={subItem.minSubSubCount}\r\n        selectorType={subItem.selectorType}\r\n        parentPropName={parentPropName}\r\n        parentPropIndex={i}\r\n        onCheckboxChange={onCheckboxChange}\r\n        title={subItem.subItemName}\r\n        promptText={subItem.promptText}\r\n        addOns={subItem.subSubItems}\r\n        key={`${parentPropName}${i}`}\r\n      />\r\n    );\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SideSplitter = ({ side = 'left' }) => (\r\n  <h4 className={`submenu-items-side-header submenu-items-side-header-${side}`}>\r\n    <span className=\"font-size-md\">{side} side options</span> <span className=\"options-circle\" />\r\n  </h4>\r\n);\r\n\r\nSideSplitter.propTypes = {\r\n  side: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Radio } from 'antd';\r\nimport { Container } from '../Shared/Container/Container';\r\nimport { Image } from './Image';\r\n\r\nimport { Description } from './Description';\r\nimport { Comments } from '../Shared/Comments/Comments';\r\n\r\nimport { Order } from './Order';\r\nimport { getMediaImageUrl } from '../../utils/helpers';\r\n// import { Select as AntDSelect } from 'antd';\r\nimport { SubItemsBlock } from './SubItemsBlock';\r\nimport { ImagePlaceholder } from '../Shared/ImagePlaceholder/ImagePlaceholder';\r\nimport { Card } from '../Shared/Card/Card';\r\nimport './ProductItem.css';\r\nimport { SideSplitter } from './SideSplitter';\r\nimport { Form } from '../Shared/Form/Form';\r\n// import { NativeSelect } from '../Shared/NativeSelect/NativeSelect';\r\n// const { Option } = AntDSelect;\r\n\r\nexport const ProductItem = ({\r\n  productItem,\r\n  onQtyPlus,\r\n  onQtyMinus,\r\n  onCheckboxChange,\r\n  addToCart,\r\n  isShoppingCart = false,\r\n  onTextChange,\r\n  onItemVersionChange,\r\n  preventOrdering\r\n}) => {\r\n  let {\r\n    mediaURLs,\r\n    itemName,\r\n    price,\r\n    shortDescription,\r\n    longDescription,\r\n    comments,\r\n    canSplitLeftRight\r\n  } = productItem;\r\n  let subOptions = productItem?.itemOptions?.subOptions;\r\n  let subItems = productItem?.itemOptions?.subItems;\r\n  let subItemsLeft = productItem?.itemOptions?.subItemsLeft;\r\n  let selectDefaultValue =\r\n    productItem.itemVersion && typeof productItem.itemVersion === 'object'\r\n      ? productItem.itemVersion.itemVersion\r\n      : productItem.itemVersion;\r\n\r\n  const canSplit = canSplitLeftRight && subItems && subItemsLeft;\r\n  const handleVersionChange = (e) => onItemVersionChange(e.target.value);\r\n  return (\r\n    <Container>\r\n      {productItem && (\r\n        <Card className=\"product\">\r\n          <ImagePlaceholder>\r\n            <Image url={getMediaImageUrl(mediaURLs)} itemName={itemName} />\r\n          </ImagePlaceholder>\r\n          <div className=\"p-default product-card__wrapper\">\r\n            <Description\r\n              itemName={itemName}\r\n              description={longDescription || shortDescription}\r\n              price={price}\r\n            />\r\n            {productItem.hasVersions &&\r\n              productItem.itemVersions &&\r\n              productItem.itemVersions.length > 0 && (\r\n                <div className=\"product-card__item-versions\">\r\n                  {/*<AntDSelect defaultValue={selectDefaultValue} onChange={onItemVersionChange}>\r\n                    {productItem.itemVersions.map(\r\n                      ({ itemVersion, version1DisplayText }, vIndex) => (\r\n                        <Option value={itemVersion} key={`itemVersion${vIndex}`}>\r\n                          {version1DisplayText}\r\n                        </Option>\r\n                      )\r\n                    )}\r\n                  </AntDSelect>*/}\r\n                  <Radio.Group onChange={handleVersionChange} value={selectDefaultValue}>\r\n                    {productItem.itemVersions.map(\r\n                      ({ itemVersion, version1DisplayText }, vIndex) => (\r\n                        <Radio key={`itemVersion${vIndex}`} value={itemVersion}>\r\n                          {version1DisplayText}\r\n                        </Radio>\r\n                      )\r\n                    )}\r\n                  </Radio.Group>\r\n                  {/* <NativeSelect\r\n                    onChange={onItemVersionChange}\r\n                    value={selectDefaultValue}\r\n                    options={productItem.itemVersions}\r\n                  />*/}\r\n                </div>\r\n              )}\r\n            <SubItemsBlock\r\n              subItems={subOptions}\r\n              onCheckboxChange={onCheckboxChange}\r\n              parentPropName=\"subOptions\"\r\n            />\r\n            {canSplit && <SideSplitter side=\"left\" />}\r\n            <SubItemsBlock\r\n              subItems={subItemsLeft}\r\n              onCheckboxChange={onCheckboxChange}\r\n              parentPropName=\"subItemsLeft\"\r\n            />\r\n            {canSplit && <SideSplitter side=\"right\" />}\r\n            <SubItemsBlock\r\n              subItems={subItems}\r\n              onCheckboxChange={onCheckboxChange}\r\n              parentPropName=\"subItems\"\r\n            />\r\n            {/*<Comments comments={comments} onTextChange={onTextChange} />*/}\r\n\r\n            <Order\r\n                preventOrdering={preventOrdering}\r\n              quantity={productItem.quantity}\r\n              onQtyPlus={onQtyPlus}\r\n              onQtyMinus={onQtyMinus}\r\n              addToCart={addToCart}\r\n              isShoppingCart={isShoppingCart}\r\n            />\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nProductItem.propTypes = {\r\n  productItem: PropTypes.shape({\r\n    mediaURLs: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n    itemName: PropTypes.string,\r\n    price: PropTypes.any,\r\n    shortDescription: PropTypes.any,\r\n    longDescription: PropTypes.any,\r\n    addOns: PropTypes.array,\r\n    preferences: PropTypes.array,\r\n    notes: PropTypes.string\r\n  }),\r\n  quantity: PropTypes.number,\r\n  onCheckboxChange: PropTypes.func.isRequired,\r\n  onQtyPlus: PropTypes.func.isRequired,\r\n  onQtyMinus: PropTypes.func.isRequired,\r\n  addToCart: PropTypes.func.isRequired,\r\n  onItemVersionChange: PropTypes.func.isRequired,\r\n  onTextChange: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { ProductItem } from '../components/ProductItem/ProductItem';\r\nimport useProductItem from '../hooks/product-item/useProductItem';\r\nimport { addCartItem } from '../redux/slices/shoppingCart';\r\nimport { useDispatch } from 'react-redux';\r\nimport usePreventOrdering from '../hooks/usePreventOrdering';\r\n\r\n\r\nconst ProductItemPage = ({ businessData }) => {\r\n  const [preventOrdering] = usePreventOrdering(businessData);\r\n  let item = null;\r\n  const { search } = useLocation();\r\n  const { businessUrlKey, productId } = useParams();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const itemsById = businessData?.itemsById;\r\n  if (itemsById && productId) {\r\n    item = itemsById[productId];\r\n  } else if (!itemsById || !itemsById[productId]) {\r\n    //redirect to 404\r\n  }\r\n\r\n  const [\r\n    productItem,\r\n    handleSubItemCheckboxChange,\r\n    handleQuantityPlus,\r\n    handleQuantityMinus,\r\n    handleCommentsChange,\r\n    handleItemVersionChange\r\n  ] = useProductItem(item);\r\n\r\n  const handleAddToCart = () => {\r\n    dispatch(addCartItem(productItem));\r\n    history.push(`/${businessUrlKey}/order-details${search}`);\r\n  };\r\n\r\n  return productItem ? (\r\n    <ProductItem\r\n      preventOrdering={preventOrdering}\r\n      productItem={productItem}\r\n      onCheckboxChange={handleSubItemCheckboxChange}\r\n      onTextChange={handleCommentsChange}\r\n      onQtyPlus={handleQuantityPlus}\r\n      onQtyMinus={handleQuantityMinus}\r\n      addToCart={handleAddToCart}\r\n      onItemVersionChange={handleItemVersionChange}\r\n    />\r\n  ) : null;\r\n};\r\nexport default ProductItemPage;"],"sourceRoot":""}