{"version":3,"sources":["hooks/product-item/useProductItem.js","components/OrderHistory/OrderHistoryCard/OrderHistoryCard.js","hooks/useNativeShare.js","components/OrderHistory/OrderHistory.js","pages/order-history.js"],"names":["updateSubSubItemsVersionPriceAdjustment","version","items","oldPriceDifference","newPriceDifference","updatedItems","map","item","subSubItems","length","subSubItem","versionPriceAdjustment","innerFiltered","filter","adjustment","versionId","priceAdjustment","cost","isSelected","useState","productItem","setProductItem","useEffect","produce","draft","quantity","parentPropIndex","parentPropName","subPropIndex","subPropName","value","isRadio","itemOptions","radioItem","tmpPrice","price","maxSubSubCount","minSubSubCount","selectedLength","i","isDisabled","e","comments","target","filtered","itemVersions","itemVersion","previousItemVersion","filteredPreviousVersionData","oldPrice","newPrice","subOptions","subItems","subItemsLeft","result","OrderHistoryCard","id","title","status","orderUUID","date","orderNumber","dateTimeOrderPlacedOn","onReOrder","shareData","statusList","icon","canceled","awaiting","getStatus","text","url","businessData","useSelector","state","business","data","a","undefined","navigator","share","ogTags","description","window","location","href","console","log","useNativeShare","onShare","history","useHistory","search","useLocation","businessUrlKey","useParams","Card","className","itemName","key","onClick","push","type","OrderHistory","orders","onReloadHistory","loading","searchString","setSearchString","onChange","size","placeholder","prefix","o","toLowerCase","indexOf","order","OrderHistoryPage","loyaltyAndOrderHistory","dispatch","useDispatch","orderHistory","setOrderHistory","useGetUserSASLSummary","reloadHistory","itemOptionsString","itemFromCollection","itemsById","uuid","JSON","parse","itemPrice","itemVersionId","addCartItem"],"mappings":"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","file":"static/js/13.bf7310be.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { produce } from 'immer';\r\nexport const updateSubSubItemsVersionPriceAdjustment = (version, items) => {\r\n  let oldPriceDifference = 0;\r\n  let newPriceDifference = 0;\r\n  let updatedItems = items.map((item) => {\r\n    if (!item || !item.subSubItems || !item.subSubItems.length) return item;\r\n    return {\r\n      ...item,\r\n      subSubItems: item.subSubItems.map((subSubItem) => {\r\n        //update for subSubItems with multiple versionPriceAdjustment array\r\n        if (subSubItem.versionPriceAdjustment && subSubItem.versionPriceAdjustment.length > 0) {\r\n          const innerFiltered = subSubItem.versionPriceAdjustment.filter(\r\n            (adjustment) => adjustment.versionId === version\r\n          );\r\n\r\n          if (innerFiltered && innerFiltered.length > 0) {\r\n            if (subSubItem.priceAdjustment && innerFiltered[0].cost) {\r\n              //re-calc cost only is item was selected\r\n              if (subSubItem.isSelected) {\r\n                //need to get previous versionPriceAdjustment value and subtract it from overall price value\r\n                oldPriceDifference += subSubItem.priceAdjustment;\r\n                //then need to apply new price\r\n                newPriceDifference += innerFiltered[0].cost;\r\n              }\r\n              subSubItem.priceAdjustment = innerFiltered[0].cost;\r\n            }\r\n          }\r\n        } else if (!subSubItem.versionPriceAdjustment && subSubItem.priceAdjustment) {\r\n          //update for subSubItems with single priceAdjustment property\r\n          if (subSubItem.isSelected) {\r\n            oldPriceDifference += subSubItem.priceAdjustment;\r\n            newPriceDifference += subSubItem.priceAdjustment;\r\n          }\r\n        }\r\n        //TODO: need to check this with some working radio values\r\n        /*        if (\r\n          !subSubItem.versionPriceAdjustment &&\r\n          subSubItem.isSelected &&\r\n          subSubItem.priceAdjustment &&\r\n          item.selectorType &&\r\n          item.selectorType === 'RADIO'\r\n        ) {\r\n          newPriceDifference += subSubItem.priceAdjustment;\r\n        }*/\r\n\r\n        return subSubItem;\r\n      })\r\n    };\r\n  });\r\n\r\n  return {\r\n    oldPriceDifference,\r\n    newPriceDifference,\r\n    items: updatedItems\r\n  };\r\n};\r\nexport default (item) => {\r\n  const [productItem, setProductItem] = useState(null);\r\n  const handleSubItemCheckboxChange = (\r\n    parentPropIndex,\r\n    parentPropName,\r\n    subPropIndex,\r\n    subPropName,\r\n    priceAdjustment,\r\n    value,\r\n    isRadio\r\n  ) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        if (isRadio) {\r\n          draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n            parentPropName\r\n          ][parentPropIndex]['subSubItems'].map((radioItem) => {\r\n            if (radioItem.priceAdjustment && radioItem.isSelected) {\r\n              let tmpPrice = (draft.price -= radioItem.priceAdjustment);\r\n              draft.price = tmpPrice >= 0 ? tmpPrice : 0;\r\n            }\r\n            return {\r\n              ...radioItem,\r\n              isSelected: false\r\n            };\r\n          });\r\n        }\r\n\r\n        draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'][subPropIndex][\r\n          subPropName\r\n        ] = value;\r\n\r\n        if (priceAdjustment && value) {\r\n          draft.price += priceAdjustment;\r\n        } else if (priceAdjustment && !value) {\r\n          let tmpPrice = (draft.price -= priceAdjustment);\r\n          draft.price = tmpPrice >= 0 ? tmpPrice : 0;\r\n        }\r\n\r\n        const { maxSubSubCount, minSubSubCount } = draft.itemOptions[parentPropName][\r\n          parentPropIndex\r\n        ];\r\n        if (maxSubSubCount && !isRadio) {\r\n          const selectedLength = draft.itemOptions[parentPropName][parentPropIndex][\r\n            'subSubItems'\r\n          ].filter((i) => i.isSelected).length;\r\n          if (selectedLength === maxSubSubCount) {\r\n            draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n              parentPropName\r\n            ][parentPropIndex]['subSubItems'].map((item) =>\r\n              item.isSelected ? item : { ...item, isDisabled: true }\r\n            );\r\n          } else {\r\n            draft.itemOptions[parentPropName][parentPropIndex]['subSubItems'] = draft.itemOptions[\r\n              parentPropName\r\n            ][parentPropIndex]['subSubItems'].map((item) =>\r\n              item.isDisabled ? { ...item, isDisabled: false } : item\r\n            );\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCommentsChange = (e) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.comments = e.target.value;\r\n      })\r\n    );\r\n  };\r\n  const handleQuantityPlus = () => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.quantity = draft.quantity + 1;\r\n      })\r\n    );\r\n  };\r\n  const handleQuantityMinus = () => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        draft.quantity = draft.quantity > 1 ? draft.quantity - 1 : 1;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleItemVersionChange = (version) => {\r\n    setProductItem(\r\n      produce(productItem, (draft) => {\r\n        const filtered = draft.itemVersions.filter(({ itemVersion }) => itemVersion === version);\r\n        const previousItemVersion = draft.itemVersion;\r\n\r\n        const filteredPreviousVersionData = draft.itemVersions.filter(\r\n          ({ itemVersion }) =>\r\n            itemVersion ===\r\n            (typeof previousItemVersion === 'object'\r\n              ? previousItemVersion.versionId\r\n              : previousItemVersion)\r\n        );\r\n        if (\r\n          filteredPreviousVersionData &&\r\n          filteredPreviousVersionData.length > 0 &&\r\n          filtered &&\r\n          filtered.length > 0\r\n        ) {\r\n          let oldPrice = filteredPreviousVersionData[0].price;\r\n          let newPrice = filtered[0].price;\r\n          draft.price -= oldPrice;\r\n          draft.price += newPrice;\r\n\r\n          draft.itemVersion = filtered[0].itemVersion;\r\n\r\n          let subOptions = draft?.itemOptions?.subOptions;\r\n          let subItems = draft?.itemOptions?.subItems;\r\n          let subItemsLeft = draft?.itemOptions?.subItemsLeft;\r\n\r\n          if (subOptions && subOptions.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subOptions);\r\n            draft.itemOptions.subOptions = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n          if (subItems && subItems.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subItems);\r\n            draft.itemOptions.subItems = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n          if (subItemsLeft && subItemsLeft.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(version, subItemsLeft);\r\n            draft.itemOptions.subItemsLeft = result.items;\r\n            draft.price -= result.oldPriceDifference;\r\n            draft.price += result.newPriceDifference;\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (item && typeof item !== 'undefined') {\r\n      setProductItem(\r\n        produce(item, (draft) => {\r\n          if (!item.quantity) {\r\n            draft.quantity = 1;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }, [item]);\r\n  return [\r\n    productItem,\r\n    handleSubItemCheckboxChange,\r\n    handleQuantityPlus,\r\n    handleQuantityMinus,\r\n    handleCommentsChange,\r\n    handleItemVersionChange\r\n  ];\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\r\nimport { IoMdCloseCircle, IoIosCheckmarkCircle, IoIosTime } from 'react-icons/io';\r\nimport './OrderHistoryCard.css';\r\nimport { Button } from 'antd';\r\nimport { AiOutlineShareAlt } from 'react-icons/ai';\r\nimport { BsArrowRepeat, BsInfoCircle } from 'react-icons/bs';\r\nimport { Card } from '../../Shared/Card/Card';\r\nimport useNativeShare from \"../../../hooks/useNativeShare\";\r\n\r\nfunction getStatus(status) {\r\n  const statusList = {\r\n    'picked-up': {\r\n      title: 'Picked Up',\r\n      icon: <IoIosCheckmarkCircle />\r\n    },\r\n    canceled: {\r\n      title: 'Canceled',\r\n      icon: <IoMdCloseCircle />\r\n    },\r\n    awaiting: {\r\n      title: 'Awaiting',\r\n      icon: <IoIosTime />\r\n    }\r\n  };\r\n  return statusList[status] !== undefined ? statusList[status] : null;\r\n}\r\nexport const OrderHistoryCard = ({\r\n  id,\r\n  title,\r\n  price,\r\n  items,\r\n  status,\r\n  date,\r\n  orderUUID,\r\n  orderNumber,\r\n  dateTimeOrderPlacedOn,\r\n  onReOrder\r\n}) => {\r\n  const orderStatus = getStatus(status);\r\n  const shareData = {\r\n    title: 'YouDash French Bakery',\r\n    text: 'YouDash French Bakery - the best bakery in the world!',\r\n    url: 'https://youdash.co/french-bakery'\r\n  };\r\n  const [onShare] =  useNativeShare();\r\n  let history = useHistory();\r\n  const { search } = useLocation();\r\n  let { businessUrlKey } = useParams();\r\n  const handleOrderStatus = () =>\r\n    history.push(`/${businessUrlKey}/order-status/${orderUUID}${search}`);\r\n  const handleShare = () => onShare(shareData);\r\n  const handleReOrder = () => onReOrder(items);\r\n\r\n  return (\r\n    <Card className=\"order-history-card\">\r\n      {/*<h4 className=\"flex primary-text\">\r\n        <span>{title}</span>\r\n        <span>${price}</span>\r\n      </h4>*/}\r\n      <div className=\"flex orders\">\r\n        <ul>\r\n          {(items || []).map(({ itemName, quantity }, i) => (\r\n            <li key={`product-list-item${orderUUID + i}`}>\r\n              {itemName} x{quantity}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Button icon={<BsInfoCircle />} onClick={handleOrderStatus} type=\"primary\">\r\n          Status\r\n        </Button>\r\n        {/* {orderStatus && (\r\n          <div className={`flex status status-${status}`}>\r\n            <span className=\"status-title\">{orderStatus.title}</span>\r\n            {orderStatus.icon}\r\n          </div>\r\n        )}*/}\r\n      </div>\r\n      <div className=\"share-order flex\">\r\n        <Button icon={<AiOutlineShareAlt />} onClick={handleShare}>\r\n          Share\r\n        </Button>\r\n        <Button icon={<BsArrowRepeat />} onClick={handleReOrder} type=\"primary\">\r\n          Add all to cart\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex order-history-card-footer font-size-sm\">\r\n        <span>{dateTimeOrderPlacedOn}</span>\r\n        {orderNumber && <span>#{orderNumber}</span>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderHistoryCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  title: PropTypes.string,\r\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  items: PropTypes.array,\r\n  status: PropTypes.string,\r\n  date: PropTypes.string,\r\n  orderNumber: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport default () => {\r\n  const businessData = useSelector((state) => state.business.data);\r\n  const handleNativeShare = async ({ title, text, url }) => {\r\n    if (navigator.share !== undefined && businessData) {\r\n      const { ogTags } = businessData;\r\n      try {\r\n        await navigator.share({\r\n          title: title || ogTags.title,\r\n          text: text || ogTags.description,\r\n          url: url || window.location.href\r\n        });\r\n      } catch (err) {\r\n        console.log('Share failed.');\r\n      }\r\n    }\r\n  };\r\n  return [handleNativeShare];\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Button } from 'antd';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { IoIosRefresh } from 'react-icons/io';\r\nimport { OrderHistoryCard } from './OrderHistoryCard/OrderHistoryCard';\r\nimport './OrderHistory.css';\r\nexport const OrderHistory = ({ orders, onReOrder, onReloadHistory, loading }) => {\r\n  const [searchString, setSearchString] = useState('');\r\n  const handleSearch = (e) => setSearchString(e.target.value);\r\n\r\n  return (\r\n    <div className=\"p-default order-history\">\r\n      <h3 className=\"font-size-lg flex\">\r\n        <span>Search order</span>\r\n        <Button type=\"primary\" icon={<IoIosRefresh />} loading={loading} onClick={onReloadHistory} />\r\n      </h3>\r\n      <Input\r\n        value={searchString}\r\n        onChange={handleSearch}\r\n        size=\"large\"\r\n        placeholder=\"Search order by name\"\r\n        prefix={<AiOutlineSearch />}\r\n        className=\"card bg-secondary\"\r\n      />\r\n      {(searchString.length > 1 && orders\r\n        ? orders.filter(\r\n            (o) =>\r\n              o.items.filter(\r\n                (i) => i.itemName.toLowerCase().indexOf(searchString.toLowerCase()) !== -1\r\n              ).length\r\n          )\r\n        : orders || []\r\n      ).map((order, i) => (\r\n        <OrderHistoryCard {...order} onReOrder={onReOrder} key={`orderHistory${i}`} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nOrderHistory.propTypes = {\r\n  orders: PropTypes.array\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport { OrderHistory } from '../components/OrderHistory/OrderHistory';\r\nimport { addCartItem } from '../redux/slices/shoppingCart';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { produce } from 'immer';\r\nimport { updateSubSubItemsVersionPriceAdjustment } from '../hooks/product-item/useProductItem';\r\nimport useGetUserSASLSummary from '../hooks/user/useGetUserSASLSummary';\r\nconst OrderHistoryPage = ({ businessData, loyaltyAndOrderHistory }) => {\r\n  const { search } = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { businessUrlKey } = useParams();\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  let [user, loyalty, reloadHistory, loading] = useGetUserSASLSummary();\r\n\r\n  useEffect(() => {\r\n    if (loyaltyAndOrderHistory && loyaltyAndOrderHistory.orderHistory) {\r\n      setOrderHistory(loyaltyAndOrderHistory.orderHistory);\r\n    }\r\n  }, [loyaltyAndOrderHistory]);\r\n\r\n  const handleReOrder = (items) => {\r\n    if (items && items.length > 0) {\r\n      items.map(({ itemOptionsString, itemVersion, item, ...rest }) => {\r\n        let itemFromCollection = produce(businessData.itemsById[item.uuid], (draft) => {});\r\n\r\n        if (itemFromCollection) {\r\n          let itemOptions = null;\r\n          try {\r\n            itemOptions = JSON.parse(itemOptionsString);\r\n          } catch (e) {\r\n            itemOptions = itemFromCollection.itemOptions;\r\n          }\r\n\r\n          let itemPrice =\r\n            itemVersion && typeof itemVersion === 'object'\r\n              ? itemVersion.price\r\n              : itemFromCollection.price;\r\n          let itemVersionId =\r\n            itemVersion && typeof itemVersion === 'object'\r\n              ? itemVersion.itemVersion\r\n              : itemFromCollection.itemVersion;\r\n\r\n          let subOptions = itemOptions?.subOptions;\r\n          let subItems = itemOptions?.subItems;\r\n          let subItemsLeft = itemOptions?.subItemsLeft;\r\n\r\n          if (subOptions && subOptions.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(itemVersionId, subOptions);\r\n            itemPrice += result.newPriceDifference;\r\n          }\r\n          if (subItems && subItems.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(itemVersionId, subItems);\r\n            itemPrice += result.newPriceDifference;\r\n          }\r\n          if (subItemsLeft && subItemsLeft.length) {\r\n            const result = updateSubSubItemsVersionPriceAdjustment(itemVersionId, subItemsLeft);\r\n            itemPrice += result.newPriceDifference;\r\n          }\r\n\r\n          dispatch(\r\n            addCartItem({\r\n              ...itemFromCollection,\r\n              quantity: item.quantity,\r\n              itemVersion: item.itemVersion,\r\n              itemOptions: itemOptions,\r\n              price: itemPrice\r\n            })\r\n          );\r\n        }\r\n        return item;\r\n      });\r\n      history.push(`/${businessUrlKey}/order-details${search}`);\r\n    }\r\n  };\r\n  return (\r\n    <OrderHistory\r\n      orders={orderHistory}\r\n      onReOrder={handleReOrder}\r\n      loading={loading}\r\n      onReloadHistory={reloadHistory}\r\n    />\r\n  );\r\n};\r\n\r\nexport default OrderHistoryPage;\r\n"],"sourceRoot":""}